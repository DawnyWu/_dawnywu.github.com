---
layout: post
title:  "es6 class"
date:   2016-11-20
categories: js
---

### Class expressions

```js
const MyClass = class {
    ···
};
const inst = new MyClass();
```

```js
const MyClass = class Me {
    getClassName() {
        return Me.name;
    }
};
const inst = new MyClass();

console.log(inst.getClassName()); // Me
console.log(Me.name); // ReferenceError: Me is not defined
```

### constructor

```js
Foo === Foo.prototype.constructor
// true

typeof Foo
// 'function'
```

### Static data properties

`MyClass.prop // => 'shit'` 的效果

```js
class Point {
    constructor(x, y) {
        this.x = x;
        this.y = y;
    }
}
Point.ZERO = new Point(0, 0);


class Point {
    constructor(x, y) {
        this.x = x;
        this.y = y;
    }
    static get ZERO() {
        return new Point(0, 0);
    }
}
```


### area()前边的get是什么？

叫 Prototype methods

```js
class Polygon {
  constructor(height, width) {
    this.height = height;
    this.width = width;
  }
  
  get area() {
    return this.calcArea();
  }

  calcArea() {
    return this.height * this.width;
  }
}

const square = new Polygon(10, 10);

// 有get的话，可以如下方式
console.log(square.area);

// 没有get的话, 后边必须加括号
console.log(square.area());
```

static 版的 。。。

```js
class SCAccordion  {
  static get KEY_UP () {
    return 38;
  }
}

console.log(SCAccordion.KEY_UP)
```
